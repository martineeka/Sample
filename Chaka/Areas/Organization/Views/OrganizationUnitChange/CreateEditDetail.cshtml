@model Chaka.ViewModels.Organization.OrgUnitChange.CreateEditDetailViewModel

@using Kendo.Mvc.UI

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addEditForm", name = "addEditForm" }))
{
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.OrgUnitTransactionID)
    @Html.HiddenFor(m => m.OrgUnitID)
    @Html.HiddenFor(m => m.OrganizationUnitID) //parentOrgUnit
    @Html.HiddenFor(m => m.EmployeeID)
    @Html.HiddenFor(m => m.EmployeeCode)
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Code) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                <input type="text" name="Code" class="form-control" value="@(Model.Code)" style="resize: none; width: 99%; padding: 2px 0;text-indent: .7em;">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Name) </div>
            <div class="col-md-8">
                <input type="text" name="Name" class="form-control" value="@(Model.Name)" style="resize: none; width: 99%; padding: 2px 0;text-indent: .7em;">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.CostCenterID)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.CostCenterID)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Cost Center...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetCostCenter", "OrganizationUnitChange");
                                });
                          })
                )
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">@Html.LabelFor(m => m.EmployeeID)</label>
            <div class="col-md-8">
                <i class="required-field fa fa-asterisk IsSpecificEmployee_validation"></i>
                <div class="input-group">
                    <input type="hidden" id="EmployeeID" name="FollowUpBy" class="parameters" value="@Model.EmployeeID" />
                    @Html.Kendo().TextBoxFor(x => x.EmployeeName).HtmlAttributes(new { @class = "form-control hover-to-readonly" })
                    <div class="input-group-addon">
                        <a id="btnSearchEmployee" class="k-icon k-i-search search-icon-fix" href="#"></a>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.OrganizationleveId)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.OrganizationleveId)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Organization Level...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetOrgLevel", "OrganizationUnitChange");
                                });
                          })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.BeginEff) </div>
            <div class="col-md-8">
                <i class="required-field fa fa-asterisk"></i>
                @Html.Kendo().DatePickerFor(m => m.BeginEff).Max(Model.LastEff.HasValue ? Model.LastEff.Value : DateTime.MaxValue).HtmlAttributes(new { type = "text", placeholder = "Select date" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.LastEff) </div>
            <div class="col-md-8">
                <i class="required-field"></i>
                @Html.Kendo().DatePickerFor(m => m.LastEff).Min(Model.BeginEff.Value).HtmlAttributes(new { type = "text", placeholder = "Select date" })
                <span title="Clear Date" class="clearDateTimePickerPopUp"><i class="fa fa-times-circle"></i></span>
            </div>
        </div>


        <div class="form-group">
            <label class="col-md-2">@Html.LabelFor(m => m.OrganizationUnitID)</label>
            <div class="col-md-8">
                <i class="required-field fa fa-asterisk IsSpecificEmployee_validation"></i>
                <div class="input-group">
                    <input type="hidden" id="OrganizationUnitID" name="FollowUpBy" class="parameters" value="@Model.OrganizationUnitID" />
                    @Html.Kendo().TextBoxFor(x => x.OrganizationUnit).HtmlAttributes(new { @class = "form-control hover-to-readonly" })
                    <div class="input-group-addon">
                        <a id="btnSearchOrgUnit" class="k-icon k-i-search search-icon-fix" href="#"></a>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.CategoryID)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.CategoryID)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Category...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetCategory", "OrganizationUnitChange");
                                });
                          })
                )
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-2 ">
                    @Html.LabelFor(m => m.IsLegalEntity)
                </div>
                <div class="col-md-8">
                    @Html.Kendo().CheckBox().Name("IsLegalEntityDummy")
                    @Html.HiddenFor(m => m.IsLegalEntity)
                </div>
            </div>*@

        @*<div class="form-group">
                <div class="col-md-2">@Html.LabelFor(m => m.IsLegalEntity) </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(m => m.IsLegalEntity)
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-2 ">
                @Html.LabelFor(m => m.IsLegalEntity)
            </div>
            <div class="col-md-8">
                @Html.Kendo().CheckBox().Name("IsLegalEntityDummy")
                @Html.HiddenFor(m => m.IsLegalEntity)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.LegalEntityInformationID)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.LegalEntityInformationID)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Legal Entity Information...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetLegalEntityInformation", "OrganizationUnitChange");
                                });
                          })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3"></div>
            <div class="col-md-7">
                <button type="submit" id="btnSave" name="btnSave" class="btn btn-primary">Save</button>
                <button type="button" id="btnClose" name="btnClose" class="btn btn-primary">Close</button>
            </div>
        </div>
    </div>
}

<div id="browseOrgUnit"></div>
<div id="browseSuperior"></div>

<script>
    $(function ()
    {
        $("#btnSave").click(popup.saveClick);
        $("#btnClose").click(popup.closeClick);
    });

    $(document).ready(function ()
    {
        $("#OrganizationUnit").attr("readonly", true);
        $("#EmployeeName").attr("readonly", true);
        $("#LegalEntityInformationID").data("kendoDropDownList").readonly(true);


        $("#BeginEff").change(startChange);
        $("#LastEff").change(endChange);
        $("#IsLegalEntity").change(isLegalChange);
    });
</script>

<script>
    var windowOrgUnit = (function (e) {
        return {
            windowOptions: {
                modal: true,
                width: 800,
                height: 340,
                visible: false,
                animation: {
                    open: { effects: "slideIn:down fadeIn", duration: 350 },
                    close: { effects: "slideIn:up fadeIn", reverse: true, duration: 200 }
                },
            }
        };
    })(jQuery);

    $(function () {
        $("span.clearDateTimePickerPopUp").click(function () { datePicker_clearValue(this) });

        $("#browseOrgUnit").kendoWindow(windowOrgUnit.windowOptions);
        $("#browseSuperior").kendoWindow(windowOrgUnit.windowOptions);

        const windowBrowseEmployee = function (e)
        {
            e.preventDefault();

            $("#browseSuperior").html(kendoWindowHelper.loadingTemplate);
            $("#browseSuperior")
                .data("kendoWindow")
                .title("Browse Employee")
                .refresh({
                    url:
                        '@Url.Action("Index", "BrowseSuperior", new { area = "Organization", callback = "EmployeeID;EmployeeName;EmployeeCode" })'
                })
                .center()
                .open();
        };

        const windowBrowseOrgUnit = function (e)
        {
            e.preventDefault();

            $("#browseOrgUnit").html(kendoWindowHelper.loadingTemplate);
            $("#browseOrgUnit")
                .data("kendoWindow")
                .title("Browse Organization Unit")
                .refresh({
                    url:
                        '@Url.Action("Index", "BrowseOrganizationUnit", new { area = "Organization", callback = "OrganizationUnitID;OrganizationUnit" })'
                })
                .center()
                .open();
        };

        $("#btnSearchEmployee").click(windowBrowseEmployee);
        $("#btnSearchOrgUnit").click(windowBrowseOrgUnit);


        if ($("#IsLegalEntity").val() === "True") {
            $("#IsLegalEntityDummy").prop("checked", true);
        }

        function checkLegalEntity()
        {
            $("#LegalEntityInformationID").val(null);
            var entity = $("#IsLegalEntityDummy");
            if (entity.is(':checked'))
            {
                $("#LegalEntityInformationID").data("kendoDropDownList").readonly(false);

                $("#IsLegalEntity").val(true);


            } else
            {
                $("#LegalEntityInformationID").data("kendoDropDownList").readonly(true);

                $("#IsLegalEntity").val(false);
            }
        }

        checkLegalEntity();
        $("#IsLegalEntityDummy").change(function ()
        {

            checkLegalEntity();
        });

    });
</script>
