@model Chaka.ViewModels.Organization.Location.CreateEditViewModel

@using Kendo.Mvc.UI
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addEditForm", name = "addEditForm" }))
{
    @Html.HiddenFor(m => m.ID) 
    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Code) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                <input type="text" name="Code" class="form-control" value="@(Model.Code)" style="resize: none; width: 99%; padding: 2px 0;text-indent: .7em;">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Name) </div>
            <div class="col-md-8">
                <input type="text" name="Name" class="form-control" value="@(Model.Name)" style="resize: none; width: 99%; padding: 2px 0;text-indent: .7em;">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.CountryId) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.CountryId)
                          .HtmlAttributes(new { style = "width:100%", @class = "form-control" })
                          .OptionLabel("Select Country...")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .DataSource(source =>
                      {
                            source.Read(read =>
                            {
                                read.Action("GetListCountry", "Location");
                            });
                      })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.ProvinceId) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.ProvinceId)
                          .HtmlAttributes(new { style = "width:100%", @class = "form-control" })
                          .OptionLabel("Select Province...")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .DataSource(source =>
                      {
                            source.Read(read =>
                            {
                                read.Action("GetCascadeState", "Location").Data("filterCountry");
                            }).ServerFiltering(true);
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("CountryId")
                )

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.CityId) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.CityId)
                          .HtmlAttributes(new { style = "width:100%", @class = "form-control" })
                          .OptionLabel("Select City...")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .DataSource(source =>
                      {
                            source.Read(read =>
                            {
                                read.Action("GetCascadeCity", "Location").Data("filterCity");
                            }).ServerFiltering(true);
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("ProvinceId")
                )

            </div>
        </div>



        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Address) </div>
            <div class="col-md-8">
                @Html.Kendo().TextBoxFor(m => m.Address).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Description) </div>
            <div class="col-md-8">
                <textarea name="Description" class="form-control">@(Model.Description)</textarea>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Postalcode) </div>
            <div class="col-md-8">
                @Html.Kendo().TextBoxFor(m => m.Postalcode).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.BeginEff) </div>
            <div class="col-md-8">
                @Html.Kendo().DatePickerFor(m => m.BeginEff).Value(@Model.BeginEff.ToString() == "1/1/0001 12:00:00 AM" ? DateTime.Today : @Model.BeginEff).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.LastEff) </div>
            <div class="col-md-8">
                @Html.Kendo().DatePickerFor(m => m.LastEff).Value(@Model.LastEff.ToString() == "1/1/0001 12:00:00 AM" ? DateTime.Today : @Model.LastEff).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>

        


        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.ClassificationId) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.ClassificationId)
                          .HtmlAttributes(new { style = "width:100%", @class = "form-control" })
                          .OptionLabel("Select Classification...")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .DataSource(source =>
                      {
                            source.Read(read =>
                            {
                                read.Action("GetListClassification", "Location");
                            });
                      })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3"></div>
            <div class="col-md-7">
                <button type="submit" id="btnSave" name="btnSave" class="btn btn-primary">Save</button>
                <button type="button" id="btnClose" name="btnClose" class="btn btn-primary">Close</button>
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        $("#btnClose").click(popup.closeClick);
        $("#btnSave").click(popup.saveClick);
    });

     
</script>
