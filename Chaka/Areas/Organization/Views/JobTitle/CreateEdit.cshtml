@model Chaka.ViewModels.Organization.JobTitle.CreateEditViewModel

@using Kendo.Mvc.UI
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addEditForm", name = "addEditForm" }))
{
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.JobLevelCategoryID)
    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Code) </div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                <input type="text" name="Code" class="form-control" value="@(Model.Code)" style="resize: none; width: 99%; padding: 2px 0;text-indent: .7em;">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Name) </div>
            <div class="col-md-8">
                <input type="text" name="Name" class="form-control" value="@(Model.Name)" style="resize: none; width: 99%; padding: 2px 0;text-indent: .7em;">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.JobStatusID)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.JobStatusID)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Job Status...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetJobStatus", "JobTitle");
                                });
                          })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.JobLevelID)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>

                @(Html.Kendo().DropDownListFor(x => x.JobLevelID)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Job Level...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetLevel", "JobTitle");
                                });
                          })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.JobLevelCategory) </div>
            <div class="col-md-8">
                @*<input class="form-control" name="JobLevelCategory" id="JobLevelCategory" value="@Model.JobLevelCategoryID" />*@
                @Html.Kendo().TextBoxFor(m => m.JobLevelCategory).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.JobFamilyID)</div>
            <div class="col-md-8">
                <span class="required-field"><i class="fa fa-asterisk"></i></span>
                @(Html.Kendo().DropDownListFor(x => x.JobFamilyID)
                          .HtmlAttributes(new { style = "width:390px", @class = "form-control" })
                          .OptionLabel("Select Job Family...")
                          .DataTextField("Text")
                          .DataValueField("Value").Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                                source.Read(read =>
                                {
                                    read.Action("GetJobFamily", "JobTitle");
                                });
                          })
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.BeginEff) </div>
            <div class="col-md-8">
                <i class="required-field fa fa-asterisk"></i>
                @Html.Kendo().DatePickerFor(m => m.BeginEff).Max(Model.LastEff.HasValue ? Model.LastEff.Value : DateTime.MaxValue).HtmlAttributes(new { type = "text", placeholder = "Select date", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.LastEff) </div>
            <div class="col-md-8">
                <i class="required-field"></i>
                @Html.Kendo().DatePickerFor(m => m.LastEff).Min(Model.BeginEff.Value).HtmlAttributes(new { type = "text", placeholder = "Select date", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">@Html.LabelFor(m => m.Description)</div>
            <div class="col-md-8">
                @Html.EditorFor(m => m.Description, "Description")
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-3"></div>
            <div class="col-md-7">
                <button type="submit" id="btnSave" name="btnSave" class="btn btn-primary">Save</button>
                <button type="button" id="btnClose" name="btnClose" class="btn btn-primary">Close</button>
            </div>
        </div>
    </div>
}

<script>
    $(function ()
    {
        $("#btnClose").click(popup.closeClick);
        $("#btnSave").click(popup.saveClick);
    });

    $(document).ready(function ()
    {
        $("#JobLevelCategory").attr("readonly", true);

        $("#JobLevelID").change(getCategory);
        $("#BeginEff").change(startChange);
        $("#LastEff").change(endChange);

    });
</script>
